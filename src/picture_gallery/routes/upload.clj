(ns picture-gallery.routes.upload  (:require [compojure.core :refer :all]           [hiccup.form :refer :all]           [hiccup.element :refer [image]]           [hiccup.util :refer [url-encode]]           [picture-gallery.views.layout :as layout]           [noir.io :refer [resource-path]]           [noir.session :as session]           [noir.response :as resp]           [clojure.java.io :as io])  (:import [java.io File FileInputStream FileOutputStream]           java.awt.image.BufferedImage           java.awt.RenderingHints           java.awt.geom.AffineTransform           java.awt.image.AffineTransformOp           javax.imageio.ImageIO))(defn upload-page [info]    (layout/common      [:h2 "Upload an image"]      [:p info]      (form-to {:enctype "multipart/form-data"}               [:post "/upload"]                (file-upload :file)                (submit-button "upload"))))(defn handle-upload [file]  (upload-page    (if (empty? (:filename file))    "please select a file to upload"    (try      (.mkdirs (java.io.File.            (str (noir.io/resource-path)               
              "img" 
              File/separator 
              (session/get :user) 
              File/separator)))       (noir.io/upload-file          (str File/separator              "img"               File/separator               (session/get :user)               File/separator)          file)      (image {:height "150px"}               (str "/img/" (session/get :user) "/"                  (url-encode (:filename file))))    (catch Exception ex      (str "error uploading file " (.getMessage ex)))))))(defroutes upload-routes  (GET "/upload" [info] (upload-page info))  (POST "/upload" [file] (handle-upload file)))